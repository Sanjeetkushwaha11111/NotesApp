package com.sanjeet.androidassignment.practice.desingpattern.creationalFactory/**Design PatternA design pattern is a general repeatable solution to a commonly occurring problem in software designIt identifies common communication pattern between objects and realize these pattern *//**CREATION PATTERN: It focuses object creation mechanism providingand flexibility and encapsulation for creation new objects */fun main() {    val retrofit = Retrofit    Retrofit.getRetrofit()}// SINGLETON PATTERN: Ensures only one instance of class existsobject Retrofit {    fun getRetrofit() {        println("Got Retrofit")    }}/*You might know what Singleton is. but you do not know it is a Design Pattern.Singleton is an object is just has one instance through your entire code base (Application).In kotlin with an object keyword you can create a singleton as easily as below:*/