package com.sanjeet.androidassignment.practice// kotlin scope function/*----|---------------|---------------------|--------------------|--------    |    Function   |    context object   |    Return Value    |----|---------------|---------------------|--------------------|-------    |    let        |       it            |    lambda result   |    |    run        |       this          |    lambda result   |    |    with       |       this          |    lambda result   |    |    apply      |       this          |    context object  |    |    also       |       it            |    context object  |----|---------------|---------------------|--------------------|-------- */// Scope function are whose sole purpose is// to execute a block of code within the context of an object//When you call such a function on an object with a lambda expression provided,// it forms a temporary scope. In this scope,// you can access the object without its namefun main() {    val user = User("Sanjeet", 24)    user.apply<User> {        setName("sanjeet")        setAge(24)    }    user.let {        it.name = "sanjeet"        it.age = 24        user    }    user.let {        it.name = "Golu"        it.age = 12        user    }    user.also {        it.setName("Ram")        it.setAge(0)    }    user.run {        age = 50        name = "slandc"        user    }}data class User(var name: String, var age: Int) {    fun setName(name: String) {        println("name is $name")    }    fun setAge(age: Int) {        println("Age is $age")    }}