package com.sanjeet.androidassignment.apiimport com.jakewharton.retrofit2.adapter.kotlin.coroutines.CoroutineCallAdapterFactoryimport okhttp3.OkHttpClientimport okhttp3.logging.HttpLoggingInterceptorimport retrofit2.Retrofitimport retrofit2.converter.gson.GsonConverterFactoryimport timber.log.Timberobject RetrofitHelper {    private const val BASE_URL = "https://rickandmortyapi.com/api/"    val logging = HttpLoggingInterceptor(CustomLogger()).apply {        level = HttpLoggingInterceptor.Level.BODY    }    private val client = OkHttpClient.Builder()        .addInterceptor(logging)        .build()    val apiService: ApiInterface by lazy {        Retrofit.Builder()            .baseUrl(BASE_URL)            .addConverterFactory(GsonConverterFactory.create())            .client(client)            .addCallAdapterFactory(CoroutineCallAdapterFactory())            .build()            .create(ApiInterface::class.java)    }}class CustomLogger : HttpLoggingInterceptor.Logger {    override fun log(message: String) {        Timber.e(message)    }}