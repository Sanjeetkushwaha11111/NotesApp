package com.sanjeet.androidassignment.ui.characterlistimport androidx.lifecycle.LiveDataimport androidx.lifecycle.MutableLiveDataimport androidx.lifecycle.ViewModelimport androidx.lifecycle.viewModelScopeimport com.sanjeet.androidassignment.api.UseCaseResultimport com.sanjeet.androidassignment.data.model.CharacterListimport com.sanjeet.androidassignment.data.repository.CharacterRepositoryimport kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.launchimport kotlinx.coroutines.withContextimport timber.log.Timberclass CharachterViewModel(private val repository: CharacterRepository) : ViewModel() {    private val _characterLiveData = MutableLiveData<MutableList<CharacterList>>()    val characterLiveData: LiveData<MutableList<CharacterList>> = _characterLiveData    fun getCharacterList() {        viewModelScope.launch {            val response = withContext(Dispatchers.IO) {                repository.getAllCharacters()            }            withContext(Dispatchers.Main) {                when (response) {                    is UseCaseResult.Success -> {                        _characterLiveData.value = response.data.results!!                    }                    is UseCaseResult.Exception -> {                        Timber.e(">>>>>>>> getCharacterList api exception ${response.exception}")                    }                }            }        }    }}